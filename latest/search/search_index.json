{
    "docs": [
        {
            "location": "/", 
            "text": "Akagera.jl Documentation\n\n\n\n\nManual\n\n\n\n\nTutorial\n\n\n\n\n\n\nLibrary\n\n\n\n\nAnimator", 
            "title": "Home"
        }, 
        {
            "location": "/#akagerajl-documentation", 
            "text": "", 
            "title": "Akagera.jl Documentation"
        }, 
        {
            "location": "/#manual", 
            "text": "Tutorial", 
            "title": "Manual"
        }, 
        {
            "location": "/#library", 
            "text": "Animator", 
            "title": "Library"
        }, 
        {
            "location": "/lib/animator/", 
            "text": "Animator\n\n\n\n\nType\n\n\n#\n\n\nAkagera.Animator\n \n \nType\n.\n\n\n   Animator(interval::Int, frames::Vector{String}, animate_type::String)\n   Animator(json::String; animate_type=\n)\n   Animator(fc::AnimeContainer)\n\n\n\n\nConstruct an \nAnimator\n with animation loaded from given arguments.\n\n\nsource\n\n\n\n\nAnimator functions\n\n\n#\n\n\nAkagera.init!\n \n \nFunction\n.\n\n\ninit!(a::Animator)\n\n\n\n\nSet \na.flag = true\n to be ready to start the animation. This should not be called manually.\n\n\nsource\n\n\n#\n\n\nAkagera.set_msg!\n \n \nFunction\n.\n\n\nset_msg!(a::Animator, msg::String)\n\n\n\n\nSet \nmsg\n field of \nAnimator\n.\n\n\njulia\n a = Animator(arrow3)\njulia\n set_msg!(a, \nHello, world!!!\n)\njulia\n a.msg\nHello, world!!!\n\n\n\n\nsource\n\n\n#\n\n\nAkagera.start!\n \n \nFunction\n.\n\n\nstart!(a::Animator)\n\n\n\n\nStart the animation.\n\n\nsource\n\n\n#\n\n\nAkagera.update_msg!\n \n \nFunction\n.\n\n\nupdate_msg!(a::Animator, new_msg::String)\n\n\n\n\nChange \nmsg\n field of \nAnimator\n. This works even while animation is activated.\n\n\nsource\n\n\n#\n\n\nAkagera.finish!\n \n \nFunction\n.\n\n\nfinish!(a::Animator)\n\n\n\n\nFinish the animation.\n\n\nsource", 
            "title": "Animator"
        }, 
        {
            "location": "/lib/animator/#animator", 
            "text": "", 
            "title": "Animator"
        }, 
        {
            "location": "/lib/animator/#type", 
            "text": "#  Akagera.Animator     Type .     Animator(interval::Int, frames::Vector{String}, animate_type::String)\n   Animator(json::String; animate_type= )\n   Animator(fc::AnimeContainer)  Construct an  Animator  with animation loaded from given arguments.  source", 
            "title": "Type"
        }, 
        {
            "location": "/lib/animator/#animator-functions", 
            "text": "#  Akagera.init!     Function .  init!(a::Animator)  Set  a.flag = true  to be ready to start the animation. This should not be called manually.  source  #  Akagera.set_msg!     Function .  set_msg!(a::Animator, msg::String)  Set  msg  field of  Animator .  julia  a = Animator(arrow3)\njulia  set_msg!(a,  Hello, world!!! )\njulia  a.msg\nHello, world!!!  source  #  Akagera.start!     Function .  start!(a::Animator)  Start the animation.  source  #  Akagera.update_msg!     Function .  update_msg!(a::Animator, new_msg::String)  Change  msg  field of  Animator . This works even while animation is activated.  source  #  Akagera.finish!     Function .  finish!(a::Animator)  Finish the animation.  source", 
            "title": "Animator functions"
        }
    ]
}